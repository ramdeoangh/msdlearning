name: Create Release Branch and PR

on:
  workflow_dispatch:
    inputs:
      release_number:
        description: 'Release number (e.g., 102 for Release-MSD-102)'
        required: true
        type: string
      release_notes:
        description: 'Release notes/description'
        required: false
        type: string
        default: 'New release'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Release Branch
        id: create_branch
        run: |
          RELEASE_BRANCH="Release-MSD-${{ inputs.release_number }}"
          echo "release_branch=$RELEASE_BRANCH" >> $GITHUB_OUTPUT
          
          # Create and push release branch from main
          git checkout -b $RELEASE_BRANCH
          git push origin $RELEASE_BRANCH
          
          echo "✅ Created release branch: $RELEASE_BRANCH"

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const releaseBranch = 'Release-MSD-${{ inputs.release_number }}';
            const releaseNotes = '${{ inputs.release_notes }}';
            
            // Get commits between prd and release branch
            const comparison = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: 'prd',
              head: releaseBranch
            });
            
            // Format commit list
            const commits = comparison.data.commits.map(commit => 
              `- ${commit.commit.message.split('\n')[0]} (${commit.sha.substring(0, 7)})`
            ).join('\n');
            
            const prBody = `## Release MSD-${{ inputs.release_number }}
            
            ### Description
            ${releaseNotes}
            
            ### Changes Included
            ${commits || 'No new commits'}
            
            ### Deployment Checklist
            - [ ] Code review completed
            - [ ] All tests passing
            - [ ] Database migrations reviewed (if any)
            - [ ] Environment variables updated (if needed)
            - [ ] Backup created before deployment
            
            ### Deployment Instructions
            After merging this PR, deploy to Hostinger:
            \`\`\`bash
            cd /path/to/your/project
            git checkout prd
            git pull origin prd
            \`\`\`
            
            ---
            *This PR was automatically created from the \`main\` branch*`;
            
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release MSD-${{ inputs.release_number }} to Production`,
              head: releaseBranch,
              base: 'prd',
              body: prBody
            });
            
            console.log(`✅ Created PR #${pr.data.number}: ${pr.data.html_url}`);
            
            // Add labels if they exist
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.data.number,
                labels: ['release', 'production']
              });
            } catch (error) {
              console.log('Note: Could not add labels (they may not exist)');
            }
